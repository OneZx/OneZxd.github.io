<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>doyou z.</title>
  <subtitle>Every step counts.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://doyouz.com/"/>
  <updated>2017-01-06T09:41:25.510Z</updated>
  <id>http://doyouz.com/</id>
  
  <author>
    <name>--zxd--</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>函数的四种调用模式</title>
    <link href="http://doyouz.com/2017/01/06/%E5%87%BD%E6%95%B0%E7%9A%84%E5%9B%9B%E7%A7%8D%E8%B0%83%E7%94%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://doyouz.com/2017/01/06/函数的四种调用模式/</id>
    <published>2017-01-06T09:37:54.000Z</published>
    <updated>2017-01-06T09:41:25.510Z</updated>
    
    <content type="html"><![CDATA[<p>以前在gitbook上总结的,这里直接贴过来了.</p>
<h3 id="函数调用的四种模式"><a href="#函数调用的四种模式" class="headerlink" title="函数调用的四种模式"></a>函数调用的四种模式</h3><ul>
<li>函数调用模式</li>
<li>方法模式</li>
<li>构造器调用模式</li>
<li>上下文模式</li>
</ul>
<h4 id="1-函数模式"><a href="#1-函数模式" class="headerlink" title="1. 函数模式"></a>1. 函数模式</h4><blockquote>
<p>就是通过函数来调用，规范写法为：<code>function fn(){}; fn()</code>; 函数中<code>this</code>指向=&gt;<code>window</code></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 声明式函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span> (<span class="params"></span>) </span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//表达式函数</span></div><div class="line"><span class="keyword">var</span> fn2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//调用 这种调用模式函数中this表示全局对象,在浏览器中指window</span></div><div class="line">fn1(); <span class="comment">//window</span></div><div class="line">fn2(); <span class="comment">//window</span></div></pre></td></tr></table></figure>
<h4 id="2-方法模式"><a href="#2-方法模式" class="headerlink" title="2. 方法模式"></a>2. 方法模式</h4><blockquote>
<p>函数依附于一个对象，是对象的一个属性，我们再调用这个函数。这种模式就是方法调用模式。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line"><span class="attr">name</span>:<span class="string">"jack"</span>,</div><div class="line"><span class="attr">sayHi</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line">&#125;;</div><div class="line">obj.sayHi(); <span class="comment">// obj对象</span></div></pre></td></tr></table></figure>
<h4 id="3-构造器调用模式"><a href="#3-构造器调用模式" class="headerlink" title="3. 构造器调用模式"></a>3. 构造器调用模式</h4><blockquote>
<p>即构造函数的调用，一般是通过new + 函数名( ),此方式中this指向new创建的新对象</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//Foo</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f1=<span class="keyword">new</span> Foo();</div></pre></td></tr></table></figure>
<ul>
<li>构造函数的返回值:</li>
<li>默认返回值是新创建的对象(实例)</li>
<li>当手动添加返回值后(<code>return</code>语句)</li>
</ul>
<ol>
<li>返回值是基本数据类型(值类型)=&gt;真正的返回值还是那个新创建的对象（即实例）</li>
<li>返回值是复杂数据类型(对象)=&gt;返回值是这个对象</li>
</ol>
<blockquote>
<p>构造函数调用例子</p>
</blockquote>
<ul>
<li>如果一个函数的返回值是一个值类型，那么这个函数作为构造函数用new运算符执行构造时，它的返回值将被丢弃。new 表达式的结果仍然是this所引用的对象。</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">this</span>.a=<span class="number">10</span>;</div><div class="line"><span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> m=<span class="keyword">new</span> test();</div><div class="line"><span class="keyword">var</span> n=test();</div><div class="line"><span class="built_in">console</span>.log(m);<span class="comment">// 返回Object=&gt;test</span></div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 返回1</span></div></pre></td></tr></table></figure>
<ul>
<li>如果一个函数的返回值是引用类型（数组，对象或者函数）的数据，那么这个函数作为构造函数用new运算符执行构造时，运算的结果将被它的返回值取代，这时候，构造函数体内的this值丢失了，取而代之的是被返回的对象</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">this</span>.a=<span class="number">10</span>;</div><div class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> test();</div><div class="line"><span class="keyword">var</span> n = test();</div><div class="line"><span class="built_in">console</span>.log(m);<span class="comment">//返回return后面的闭包 function()&#123;return 1;&#125;</span></div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">//返回return后面的闭包 function()&#123;return 1;&#125;</span></div></pre></td></tr></table></figure>
<h4 id="4-上下文模式"><a href="#4-上下文模式" class="headerlink" title="4. 上下文模式"></a>4. 上下文模式</h4><blockquote>
<p>本质–对象借用不属于该对象的方法(函数),即,我们自定义this的指向;这时候需要<code>call</code>和<code>apply</code>这两个方法</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前在gitbook上总结的,这里直接贴过来了.&lt;/p&gt;
&lt;h3 id=&quot;函数调用的四种模式&quot;&gt;&lt;a href=&quot;#函数调用的四种模式&quot; class=&quot;headerlink&quot; title=&quot;函数调用的四种模式&quot;&gt;&lt;/a&gt;函数调用的四种模式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;函数调用
    
    </summary>
    
      <category term="front-end" scheme="http://doyouz.com/categories/front-end/"/>
    
    
      <category term="JavaScript" scheme="http://doyouz.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Piper</title>
    <link href="http://doyouz.com/2017/01/06/Piper/"/>
    <id>http://doyouz.com/2017/01/06/Piper/</id>
    <published>2017-01-06T07:04:50.000Z</published>
    <updated>2017-01-06T11:23:23.445Z</updated>
    
    <content type="html"><![CDATA[<h3 id="后来啊-我再也不害怕海浪了"><a href="#后来啊-我再也不害怕海浪了" class="headerlink" title="后来啊,我再也不害怕海浪了"></a>后来啊,我再也不害怕海浪了</h3><p>中午看了pixar的短片，片名叫<code>piper</code>,中文名<code>鹬</code>,鹬蚌相争的鹬.从创意筹备加上影片制作,这部短片前前后后大约花了三年时间.一看到这个介绍,我就觉得很惊讶,才6分钟的小短片呀,需要花3年吗.不过看完后又不得不佩服这公司的制作水平,带给我们很多细节上的极致美感.</p>
<p>片中的小piper萌萌哒的样子很可爱,而这个动画短片的画质又美得无可挑剔,一切都是那么真实而美好.总之,很喜欢这个小短片.</p>
<p>这里贴出腾讯的资源.</p>
<hr>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=i0342u8y6cl&tiny=0&auto=0" allowfullscreen></iframe>

<hr>
<p>另外,建议看高清的资源,附上B站的<a href="http://www.bilibili.com/video/av6870485/" target="_blank" rel="external">piper高清资源转送口</a></p>
<p>好了,以后还是多写写IT技术类文章~~</p>
<blockquote class="blockquote-center"><h3>As long as it is a comedy, I’d rather cry during the process.</h3> </blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;后来啊-我再也不害怕海浪了&quot;&gt;&lt;a href=&quot;#后来啊-我再也不害怕海浪了&quot; class=&quot;headerlink&quot; title=&quot;后来啊,我再也不害怕海浪了&quot;&gt;&lt;/a&gt;后来啊,我再也不害怕海浪了&lt;/h3&gt;&lt;p&gt;中午看了pixar的短片，片名叫&lt;code&gt;pipe
    
    </summary>
    
      <category term="personal" scheme="http://doyouz.com/categories/personal/"/>
    
    
      <category term="review" scheme="http://doyouz.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>从前车马很慢</title>
    <link href="http://doyouz.com/2017/01/05/%E4%BB%8E%E5%89%8D%E8%BD%A6%E9%A9%AC%E5%BE%88%E6%85%A2/"/>
    <id>http://doyouz.com/2017/01/05/从前车马很慢/</id>
    <published>2017-01-05T15:24:41.000Z</published>
    <updated>2017-01-06T07:05:32.951Z</updated>
    
    <content type="html"><![CDATA[<h3 id="从前车马很慢-书信很远-一生只够爱一个人"><a href="#从前车马很慢-书信很远-一生只够爱一个人" class="headerlink" title="从前车马很慢 书信很远 一生只够爱一个人"></a>从前车马很慢 书信很远 一生只够爱一个人</h3><hr>
<blockquote>
<p>从前慢</p>
</blockquote>
<p>记得早先年少时</p>
<p>大家诚诚恳恳<br>说一句 是一句</p>
<p>清早上火车站<br>长街黑暗无行人<br>卖豆浆的小店冒着热气</p>
<p>从前的日色变得慢<br>车,马,邮件都慢<br>一生只够爱一个人</p>
<p>从前的锁也好看<br>钥匙精美有样子<br>你锁了 人家就懂了</p>
<hr>
<p>最开始是在lian的微博上看到这句话,很喜欢.<code>从前车马很慢 书信很远 一生只够爱一个人</code>.今天又看到了原诗.就顺便记下来了.</p>
<p>以前那个年代的爱情就是这样的吧，一种简简单单，平平淡淡的幸福.</p>
<hr>
<p>想起外公在老家的院子种满了果树。樱桃、柿子、琵琶、橘子、梨，李子等等，另外，还有一些叫不出名的花.总之，院子前，房屋后，到处都是外公亲手种下的树和花.这些，都包含着他对外婆满满的爱意吧。</p>
<p>一直觉得外公像一个老顽童一样，常常搞怪把我们大家都逗笑。<br>只是，老顽童走了快五年了。<br>更早的时候，一想起外公就会流泪。因为小时候很多美好的记忆都是外公外婆带给我的。</p>
<p>现在呢，外婆一个人，怕她孤单，也常常给她打电话。有时候会有些愧疚，自己在外地不能多陪着她，小时候她最疼爱的就是我了。</p>
<p>外婆也像是一个孩子，充满着童心。上学那阵放寒暑假，总会在老家多陪陪外婆，带着她到处走走逛逛，就像小时候她带着我一样。</p>
<hr>
<p>外公外婆的故事今天写不下来，太多太多。</p>
<p>睡了，晚安。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;从前车马很慢-书信很远-一生只够爱一个人&quot;&gt;&lt;a href=&quot;#从前车马很慢-书信很远-一生只够爱一个人&quot; class=&quot;headerlink&quot; title=&quot;从前车马很慢 书信很远 一生只够爱一个人&quot;&gt;&lt;/a&gt;从前车马很慢 书信很远 一生只够爱一个人&lt;/h3&gt;&lt;
    
    </summary>
    
      <category term="personal" scheme="http://doyouz.com/categories/personal/"/>
    
    
      <category term="time" scheme="http://doyouz.com/tags/time/"/>
    
  </entry>
  
  <entry>
    <title>cnpm和yarn</title>
    <link href="http://doyouz.com/2017/01/04/cnpm%E5%92%8Cyarn/"/>
    <id>http://doyouz.com/2017/01/04/cnpm和yarn/</id>
    <published>2017-01-04T08:04:04.000Z</published>
    <updated>2017-01-04T12:24:23.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-NPM"><a href="#1-NPM" class="headerlink" title="1.NPM"></a>1.NPM</h2><p>想想还是从介绍npm开始吧.NPM是随同NodeJS一起安装的包管理工具(Node Packaged Modules),通过npm可以下载和安装nodejs的模块包.在node官网下载安装node后,自带了这个工具.</p>
<p>附上<a href="https://nodejs.org/zh-cn/" target="_blank" rel="external">Nodejs官网</a></p>
<h3 id="npm的简单指令"><a href="#npm的简单指令" class="headerlink" title="npm的简单指令"></a>npm的简单指令</h3><blockquote>
<p>npm安装模块</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install &lt;Module Name&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>全局安装</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install &lt;M&gt; -g <span class="comment">#全局</span></div></pre></td></tr></table></figure>
<blockquote>
<p>卸载模块</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm uninstall &lt;Module Name&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>查看模块</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm ls</div></pre></td></tr></table></figure>
<blockquote>
<p>更新模块</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm update &lt;Module Name&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>搜索模块</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm search &lt;Module Name&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>创建模块</p>
</blockquote>
<p>即模块初始化,创建模块时,package.json文件不可少,可以使用生成这个文件.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm init</div></pre></td></tr></table></figure>
<blockquote>
<p>安装并作为package.json的一个依赖(dependency)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install &lt;pkg&gt; --save</div></pre></td></tr></table></figure>
<blockquote>
<p>查看帮助</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;</div></pre></td></tr></table></figure>
<h3 id="package-json属性"><a href="#package-json属性" class="headerlink" title="package.json属性"></a>package.json属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">- name 			--包名</div><div class="line">- version 		--包的版本号</div><div class="line">- description	--包的描述</div><div class="line">- homepage		--包的官网url</div><div class="line">- author 		--包的作者姓名</div><div class="line">- contributors  --包的其他贡献者姓名</div><div class="line">- dependencies  --依赖包列表</div><div class="line">- repository    --包代码存放的地方的类型</div><div class="line">- main 			--main字段是一个模块ID,它是一个指向你程序的主要项目</div><div class="line">- keywords 		--关键字</div></pre></td></tr></table></figure>
<hr>
<h2 id="CNPM"><a href="#CNPM" class="headerlink" title="CNPM"></a>CNPM</h2><p>CNPM其实就是<code>淘宝NPM镜像</code>,这是一个完整npmjs.org镜像,可以用此代替官方版本(只读),同步频率目前为<code>10分钟</code>一次以保证尽量与官方服务同步.</p>
<p>因为npm安装package是从国外服务器下载,速度会受较大影响.如果npm的服务器在国内就会大大的提高下载速度,于是淘宝团队就将整个服务端包都复制了一模一样的,10分钟更新一次,方便国内用户下载</p>
<p><a href="https://npm.taobao.org/" target="_blank" rel="external">cnpm官网</a></p>
<blockquote>
<p>CNPM安装</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
<blockquote>
<p>安装了cnpm后,再安装package就可以用cnpm</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cnpm install &lt;Module Name&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>同步模块</p>
</blockquote>
<p>可以通过sync命令马上同步一个模块,只有cnpm才有这个命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cnpm sync connect</div></pre></td></tr></table></figure></p>
<blockquote>
<p>cnpm不能使用<code>cnpm publish</code></p>
</blockquote>
<hr>
<h2 id="使用nrm快速切换npm源"><a href="#使用nrm快速切换npm源" class="headerlink" title="使用nrm快速切换npm源"></a>使用nrm快速切换npm源</h2><p>nrm是一个npm源管理器,能让我们在npm源间快速切换.<a href="https://github.com/Pana/nrm" target="_blank" rel="external">nrm的github</a></p>
<blockquote>
<p>install</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g nrm</div></pre></td></tr></table></figure>
<h3 id="nrm使用"><a href="#nrm使用" class="headerlink" title="nrm使用"></a>nrm使用</h3><blockquote>
<p>列出可用源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nrm ls</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> npm ---- https://registry.npmjs.org/</div><div class="line">* cnpm --- http://r.cnpmjs.org/</div><div class="line">  taobao - http://registry.npm.taobao.org/</div><div class="line">  nj ----- https://registry.nodejitsu.com/</div><div class="line">  rednpm - http://registry.mirror.cqupt.edu.cn</div></pre></td></tr></table></figure>
<blockquote>
<p>切换现有源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm use taobao</div></pre></td></tr></table></figure>
<blockquote>
<p>添加源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nrm add &lt;registry&gt; &lt;url&gt; [home]</div></pre></td></tr></table></figure>
<blockquote>
<p>删除源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm del &lt;registry&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>测试所有源速度</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm <span class="built_in">test</span></div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">  npm ---- 891ms</div><div class="line">  cnpm --- 1213ms</div><div class="line">* taobao - 460ms</div><div class="line">  eu ----- 3859ms</div><div class="line">  au ----- 1073ms</div><div class="line">  sl ----- 4150ms</div><div class="line">  nj ----- 8008ms</div></pre></td></tr></table></figure>
<hr>
<h2 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h2><p>终于写到yarn了,yarn是facebook在16年10月11日公开的js包管理工具,用来替代目前广泛使用的npm.<a href="https://github.com/yarnpkg/yarn" target="_blank" rel="external">yarn的github项目地址</a>.可以看到目前(17年01.04)已有2万多Star了.</p>
<p>yarn和npm都作为nodejs的包管理工具.但相比npm.yarn具有的新亮点如下</p>
<ul>
<li>网络优化</li>
<li>安全–下载前会检查签名和包的完整性</li>
<li>离线模式–如果之前安装过一个包,再次安装就不用从网络下载了</li>
<li>依赖关系确定性</li>
<li>扁平模式</li>
</ul>
<blockquote>
<p>总结来说,yarn具有快速,安全,可靠的特点</p>
</blockquote>
<h3 id="yarn的安装"><a href="#yarn的安装" class="headerlink" title="yarn的安装"></a>yarn的安装</h3><p>这里给出官方文档 <a href="https://yarnpkg.com/en/docs/install" target="_blank" rel="external">yarn的安装</a>,没有中文版,比较新.看不懂的话可以使用有道翻译下~~</p>
<h3 id="yarn的使用"><a href="#yarn的使用" class="headerlink" title="yarn的使用"></a>yarn的使用</h3><blockquote>
<p>项目初始化.切到项目下,会在根目录生成package.json</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn init</div></pre></td></tr></table></figure>
<blockquote>
<p>添加依赖.添加包,会自动安装最新版本</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn add &lt;package&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>更新依赖</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yarn upgrade [package] — 更新某个包</div><div class="line">yarn upgrade [package]@[version] — 指定更新到某个版本</div><div class="line">yarn upgrade [package]@[tag] — 指定更新版本到某个标签</div></pre></td></tr></table></figure>
<blockquote>
<p>移除依赖</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn remove &lt;package&gt;</div></pre></td></tr></table></figure>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>yarn里有个很重要的文件<code>yarn.lock</code>,在项目根目录下,不要去动它,在其他电脑初始化时,需要把<code>package.json</code>和<code>yarn.lock</code>都复制过去</p>
<hr>
<p>写了好久,今天就大概总结这么多吧.网上搜了很多资料,如果有不准确的地方欢迎指正 :）</p>
<blockquote class="blockquote-center"><h3>Accept what was and what is, and you’ll have more positive energy to pursue what will be.</h3> </blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-NPM&quot;&gt;&lt;a href=&quot;#1-NPM&quot; class=&quot;headerlink&quot; title=&quot;1.NPM&quot;&gt;&lt;/a&gt;1.NPM&lt;/h2&gt;&lt;p&gt;想想还是从介绍npm开始吧.NPM是随同NodeJS一起安装的包管理工具(Node Packaged Modules
    
    </summary>
    
      <category term="前端" scheme="http://doyouz.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="npm" scheme="http://doyouz.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>跨域</title>
    <link href="http://doyouz.com/2017/01/03/%E8%B7%A8%E5%9F%9F/"/>
    <id>http://doyouz.com/2017/01/03/跨域/</id>
    <published>2017-01-03T15:56:07.000Z</published>
    <updated>2017-01-04T08:09:55.819Z</updated>
    
    <content type="html"><![CDATA[<h2 id="跨域和跨域的几种方式"><a href="#跨域和跨域的几种方式" class="headerlink" title="跨域和跨域的几种方式"></a>跨域和跨域的几种方式</h2><p>一直想总结下有关跨域的知识点,趁着现在有点时间,敲敲写写也是不错的.</p>
<blockquote>
<p>跨域 </p>
</blockquote>
<p>跨域是指不同域名之间的相互访问.</p>
<blockquote>
<p>同源策略</p>
</blockquote>
<p>同源策略是浏览器的一种安全策略，所谓同源是指域名，协议，端口完全相同.</p>
<hr>
<p>因为浏览器同源策略的限制,本域的js不能操作其他域下的js,对象或数据.这跟浏览器有关,浏览器拦住了发送的消息,而与服务端无关.</p>
<h3 id="跨域的方式"><a href="#跨域的方式" class="headerlink" title="跨域的方式"></a>跨域的方式</h3><p>理解了跨域和同源策略后,我们来看看有哪些方式可以解决跨域的,这里搜集了网上一些资料,再自己总结了一下.如果有不对的地方欢迎指出 :)</p>
<hr>
<h4 id="1-jsonp"><a href="#1-jsonp" class="headerlink" title="1. jsonp"></a>1. jsonp</h4><p>jsonp(json with padding)其本质是利用了<code>&lt;script src=&quot;&quot;&gt;&lt;/script&gt;</code>标签不受同源策略限制.由服务端返回一个预先定义好的Javascript函数的调用，并且将服务器数据以该函数参数的形式传递过来，此方法需要前后端配合完成。这也是前端解决跨域问题最常见的方法.</p>
<p>注意</p>
<ul>
<li><strong>只能使用get方法</strong>(因为script标签只能是get)</li>
<li><strong>需要服务端的跨域支持</strong>(预先设定callback回调函数)</li>
</ul>
<p>比如,在服务端(node.js)做一层包装res.send(${req.query.callback}),添加一个函数,然后前端Ajax请求返回这个函数的调用.jsonp的优点是简单,兼容性好.缺点是只支持GET请求.</p>
<h5 id="jsonp的产生"><a href="#jsonp的产生" class="headerlink" title="jsonp的产生"></a>jsonp的产生</h5><ol>
<li>Ajax直接请求普通文件存在跨域无权访问的问题</li>
<li>我们在调用js文件的时候不受跨域的影响,如引入jquery框架时.</li>
<li>凡是拥有src这个属性的标签都可以跨域.如<code>&lt;script&gt;</code>,<code>&lt;img&gt;</code>,<code>&lt;iframe&gt;</code></li>
<li>如果想通过纯前端跨域访问服务端数据,只能把远程服务器中的数据装进js格式的文件里</li>
<li>而json又是一个轻量级的数据格式,且被原生js支持</li>
<li>所以为了方便客户端请求数据,逐渐形成了一种非正式的传输协议,即jsonp,该协议有个要点是<strong>允许用户传递一个callback参数给服务端</strong></li>
</ol>
<h4 id="2-服务端代理-Proxy"><a href="#2-服务端代理-Proxy" class="headerlink" title="2. 服务端代理(Proxy)"></a>2. 服务端代理(Proxy)</h4><p>网站A获取网站B上的资源内容,跨域方式分为<code>B网站可控</code>和<code>B网站不可控</code>,利用代理(proxy)这种方法实现跨域时,B网站不可控.</p>
<blockquote>
<p>proxy原理</p>
</blockquote>
<p>网站A将访问网站B的请求通过参数的形式发送给代理服务器(proxy),代理服务器收到请求后转而去访问网站B,然后将获取的信息再返回给网站A,形成一个数据请求回路.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">A --&gt;request--&gt;  Proxy --&gt;request--&gt; B</div><div class="line">A --&lt;response&lt;-- Proxy --response&lt;-- B</div></pre></td></tr></table></figure>
<h3 id="其他一些跨域方式"><a href="#其他一些跨域方式" class="headerlink" title="其他一些跨域方式"></a>其他一些跨域方式</h3><ol>
<li>同主域名下iframe控制document.domain跨域</li>
<li>location.hash+iframe</li>
<li>window.name+iframe</li>
<li>将数据通过js进行直接加载</li>
<li>html5中的postMessage</li>
<li>利用CORS进行跨域</li>
<li>web sockets</li>
</ol>
<hr>
<p>暂时先总结这么多,代码后期再补上吧~睡觉睡觉,晚安.</p>
<blockquote class="blockquote-center"><h3>Whatever is worth doing is worth doing well.</h3> </blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;跨域和跨域的几种方式&quot;&gt;&lt;a href=&quot;#跨域和跨域的几种方式&quot; class=&quot;headerlink&quot; title=&quot;跨域和跨域的几种方式&quot;&gt;&lt;/a&gt;跨域和跨域的几种方式&lt;/h2&gt;&lt;p&gt;一直想总结下有关跨域的知识点,趁着现在有点时间,敲敲写写也是不错的.&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://doyouz.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jsonp" scheme="http://doyouz.com/tags/jsonp/"/>
    
  </entry>
  
  <entry>
    <title>时间的朋友</title>
    <link href="http://doyouz.com/2016/12/31/%E6%97%B6%E9%97%B4%E7%9A%84%E6%9C%8B%E5%8F%8B/"/>
    <id>http://doyouz.com/2016/12/31/时间的朋友/</id>
    <published>2016-12-31T13:53:17.000Z</published>
    <updated>2017-01-03T15:23:40.533Z</updated>
    
    <content type="html"><![CDATA[<p>16年最后的小尾巴,时间走得真快.</p>
<hr>
<p>如果是从前,我应该拿起笔写一封信,送给未来的自己.然后在下一年到来的时候再拆开信封.看一看写了些什么,实现了多少愿望,又有多少被遗忘在角落.</p>
<p>但是呢,现在好像更喜欢听着歌码着字的感觉(一定是代码敲多了[捂脸]).</p>
<hr>
<blockquote>
<p>想要做的事好多好多.</p>
</blockquote>
<p>突然想起大一时看过的一个视频,乔布斯在斯坦福的演讲,其中有几点印象特别深刻.</p>
<hr>
<p>You’ve got to find what you love.</p>
<p>你必须得找到你喜欢什么,做自己喜欢的事</p>
<hr>
<p>那么现在,我想我是走在这条路上的,毫不犹豫的舍弃机械,选择自己喜欢的IT方向,也许现在我就是一个小小的程序猿,但是我心里知道,这就是我要的.</p>
<p>我喜欢这种需要不断学习的行业,喜欢码字敲代码,喜欢带有些艺术感的前端,也喜欢需要不断逻辑分析的服务端,喜欢各种编程语言,同样喜欢各种外语,想学的东西太多太多,想要做的事也太多太多.</p>
<p>所以,才需要我们更加珍惜生命中的这些时光吧,趁青春年少,去做吧,立刻,马上,from now on.</p>
<hr>
<blockquote>
<p>Ps.我喜欢的</p>
</blockquote>
<p>喜欢简约美.<br>如果要设计一个页面,那么一定是简约的风格.就像现在这个blog的主题.</p>
<p>喜欢音乐.<br>我想有一天我会在某个空闲的午后写一首歌,作曲然后填词,再自弹自唱.如果满意的话,再录下来发给朋友.</p>
<p>喜欢旅游.<br>想去远方,有多远走多远.最好是,和朋友,和家人,和未来的她,分别去不同的地方走走看看,印下一段又一段走在路上的时光.</p>
<p>喜欢…<br>好吧,扯远了….</p>
<p>回到jobs的演讲上来,以下是他的原话:</p>
<hr>
<p>The first story is about connecting the dots. </p>
<p>第一个故事是关于如何把生命中的点点滴滴串连起来。</p>
<hr>
<p>jobs的演讲提到三个点,最开始说的主要是我们生命中所经历的故事也许都有它存在的意义.只是在那个当时,也就是此时此刻,我们无法觉察到,我们常常为现在所处的环境所困扰,常常后知后觉.但必须承认的是,这些片段会在我们未来的某一天串连起来.</p>
<p>不论此刻我们的心情是悲伤,难过,或是仍在感叹境遇的怎样糟糕,抱怨生活的不公.但总会有那样一天,豁然开朗.那些让我们留下眼泪的事,有一天也会笑着说出来.这些过程,只是让我们的生命更加与众不同吧.</p>
<p>PS.现在心情好得不要不要的,哇哈哈.</p>
<hr>
<p>My second story is about love and loss. </p>
<p>我的第二个故事是关于爱和失去.</p>
<hr>
<p>jobs二十岁的时候在父母的车库里创办了Apple.但是三十岁那年他被自己的公司炒了.Sometimes life hits you in the head with a brick,don’t lose faith.生活有时候会拿起一块砖头拍向你的脑袋,但别失去信心,他这样说.</p>
<p>他说我们需要找到自己所爱的东西,对于工作如此,对于爱人也是如此.<br>And the only way to do great work is to love what you do. If you haven’t found it yet,keep looking. Don’t settle. 如果你现在还没有找到,那么继续找、不要停下来、全心全意的去找, 当你找到的时候你就会知道.</p>
<p>就像任何真诚的关系,随着岁月的流逝只会越来越亲密.<br>like any great relationship, it just gets better and better as the years roll on.</p>
<p>摘录了大段大段原话,说的真的很棒,感触很多,有木有有木有.</p>
<hr>
<p>My third story is about death. </p>
<p>我的第三个故事是关于死亡的. </p>
<hr>
<p>“If you live each day as if it was your last, someday you’ll most certainly be right.” 如果你把每一天都当作生命中最后一天去生活的话,那么有一天你会发现你是正确的. </p>
<p>jobs说在他17岁那年读到这段话,说他每天早上醒来都会对着镜子问自己,”如果今天是我生命中最后一天,你会不会完成你今天想做的事情呢”.</p>
<p>我们的时间有限,生命有限.<br>Don’t let the noise of other’s opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition.</p>
<p>Stay Hungry. Stay Foolish.</p>
<hr>
<p>好吧,一提到这段演讲就停不下来,总想把原话都贴过来,其中很多关于人生的思考,至少,让我很有感触.</p>
<hr>
<p>写在16年的岁末.</p>
<p>三毛曾说,一个人至少拥有一个梦想，有一个理由去坚强。心若没有栖息的地方，到哪里都是在流浪.</p>
<p>没有写梦想,但梦想一直都在.</p>
<hr>
<p>好啦,还有几分钟就到2017年.让我们17,在17年加油努力,收获幸福.</p>
<p>希望家人身体健康</p>
<p>希望朋友们工作顺利,事业有成</p>
<p>希望身边每一个可爱的人都快乐幸福</p>
<blockquote class="blockquote-center"><h2>You may be out of my sight, but never out of my mind.</h2> </blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;16年最后的小尾巴,时间走得真快.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果是从前,我应该拿起笔写一封信,送给未来的自己.然后在下一年到来的时候再拆开信封.看一看写了些什么,实现了多少愿望,又有多少被遗忘在角落.&lt;/p&gt;
&lt;p&gt;但是呢,现在好像更喜欢听着歌码着字的感觉(一定是代码敲多了
    
    </summary>
    
      <category term="personal" scheme="http://doyouz.com/categories/personal/"/>
    
    
      <category term="time" scheme="http://doyouz.com/tags/time/"/>
    
      <category term="thought" scheme="http://doyouz.com/tags/thought/"/>
    
  </entry>
  
  <entry>
    <title>next主题多说评论框样式修改</title>
    <link href="http://doyouz.com/2016/12/31/next%E4%B8%BB%E9%A2%98%E5%A4%9A%E8%AF%B4%E8%AF%84%E8%AE%BA%E6%A1%86%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/"/>
    <id>http://doyouz.com/2016/12/31/next主题多说评论框样式修改/</id>
    <published>2016-12-31T10:37:14.000Z</published>
    <updated>2016-12-31T11:07:41.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改多说评论框样式"><a href="#修改多说评论框样式" class="headerlink" title="修改多说评论框样式"></a>修改多说评论框样式</h2><p>在next主题下启用了多说评论框功能后,小伙伴们可能会对评论框样式不太满意,如果你懂一点CSS就好办了,找到css文件自己改改就行,如果不懂也没关系,这里给大家分享一下网上很多的一种样式,现在我用的就是这个样式.</p>
<hr>
<h2 id="首先next主题多说样式文件在这个路径-your-blog-path-themes-next-source-css-common-components-third-party-duoshuo-styl"><a href="#首先next主题多说样式文件在这个路径-your-blog-path-themes-next-source-css-common-components-third-party-duoshuo-styl" class="headerlink" title="首先next主题多说样式文件在这个路径:your-blog-path/themes/next/source/css/_common/components/third-party/duoshuo.styl"></a>首先next主题多说样式文件在这个路径:<code>your-blog-path/themes/next/source/css/_common/components/third-party/duoshuo.styl</code></h2><p>在这个文件的底部添加如下代码,这里我自己改动了两个样式:</p>
<ul>
<li><p>去掉多说版权显示<br><code>#ds-thread #ds-reset .ds-powered-by{display:none;}</code></p>
</li>
<li><p>去掉分享到微博<br><code>#ds-thread #ds-reset .ds-sync {display:none;}</code></p>
</li>
</ul>
<hr>
<h2 id="多说的后台自定义样式"><a href="#多说的后台自定义样式" class="headerlink" title="多说的后台自定义样式"></a>多说的后台自定义样式</h2><p>关于评论的头像样式,鼠标放上去旋转360度这种效果,需要在多说的后台自定义,如图<img src="http://doyouz.com/images/duoshuo.png" alt="duoshuo"></p>
<p>在其中添加如下代码</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">#ds-reset .ds-avatar img&#123;  </div><div class="line">width:54px;height:54px; </div><div class="line">border-radius: 27px;</div><div class="line">-webkit-border-radius: 27px;</div><div class="line">-moz-border-radius:27px;</div><div class="line">box-shadow: inset 0 -1px 0 #3333sf; </div><div class="line">-webkit-box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">#ds-reset .ds-avatar img&#123;</div><div class="line">width:54px;height:54px; </div><div class="line">border-radius: 27px;</div><div class="line">-webkit-border-radius: 27px;</div><div class="line">-moz-border-radius:27px;</div><div class="line">box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">-webkit-box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">-webkit-transition: 0.4s;   </div><div class="line">-webkit-transition: -webkit-transform 0.4s ease-out;</div><div class="line">transition: transform 0.4s ease-out;</div><div class="line">-moz-transition: -moz-transform 0.4s ease-out;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#ds-reset .ds-avatar img:hover&#123;</div><div class="line">box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);</div><div class="line">-webkit-box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);</div><div class="line">transform: rotateZ(360deg);</div><div class="line">-webkit-transform: rotateZ(360deg);</div><div class="line">-moz-transform: rotateZ(360deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p>即使你不懂css也没关系,直接复制粘贴就好.之后再<code>hexo s</code>本地预览一下看看效果吧.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;修改多说评论框样式&quot;&gt;&lt;a href=&quot;#修改多说评论框样式&quot; class=&quot;headerlink&quot; title=&quot;修改多说评论框样式&quot;&gt;&lt;/a&gt;修改多说评论框样式&lt;/h2&gt;&lt;p&gt;在next主题下启用了多说评论框功能后,小伙伴们可能会对评论框样式不太满意,如果你懂
    
    </summary>
    
      <category term="hexo" scheme="http://doyouz.com/categories/hexo/"/>
    
    
      <category term="duoshuo" scheme="http://doyouz.com/tags/duoshuo/"/>
    
  </entry>
  
  <entry>
    <title>关于next主题sidebar默认显示目录</title>
    <link href="http://doyouz.com/2016/12/30/%E5%85%B3%E4%BA%8Enext%E4%B8%BB%E9%A2%98sidebar%E9%BB%98%E8%AE%A4%E6%98%BE%E7%A4%BA%E7%9B%AE%E5%BD%95/"/>
    <id>http://doyouz.com/2016/12/30/关于next主题sidebar默认显示目录/</id>
    <published>2016-12-29T18:21:20.000Z</published>
    <updated>2016-12-30T11:41:30.946Z</updated>
    
    <content type="html"><![CDATA[<p>发现在next主题下书写文章,如果加上了<code>### 文章标题</code>,next会自动生成content目录,但是每次点开一篇文章会出现一件烦人的事</p>
<blockquote>
<p>看这里</p>
</blockquote>
<hr>
<p>就是当我们往下滑动鼠标时(pc端),侧边栏sidebar会自动显示出来</p>
<blockquote>
<p>怎么解决呢</p>
</blockquote>
<p>看官方文档sidebar配置</p>
<p><del>解决方案是:</del><br><del>- 先在<code>主题配置文件</code>中找到sidebar配置,将post改为hide.很多同学改了这部分发现没效果,我们进行如下操作</del></p>
<hr>
<p><del>1. 找到<code>themes\next\source\js\src\motions.js</code>文件</del><br><del>2. 在sublime中打开文件后ctrl+f输入<code>CONFIG.sidebar</code></del><br><del>3. 找到<code>CONFIG.sidebar.display === &#39;always&#39;</code> 将always改为hide</del></p>
<hr>
<p><del>做完上述步骤后,在git bash或其他终端中输入<code>hexo s</code>测试下吧,应该no problem了</del></p>
<blockquote>
<p>最后解决</p>
</blockquote>
<a id="more"></a>
<ul>
<li>发现这样只是在文章页可以自动显示sidebar,看了下motion.js源码,首页进入后还是会在duration 200ms延迟显示sidebar</li>
<li>还是回到主题的配置文件,添加 display: hide 这条语句</li>
</ul>
<p><img src="http://doyouz.com/images/sidebar配置.png" alt="sidebar"></p>
<p><del>写得不太详细,有空再补上一些文档链接 睡了 晚安</del></p>
<blockquote>
<p>终于改好这个sibebar的显示了 ~perfect</p>
</blockquote>
<hr>
<h3 id="去除所有动画"><a href="#去除所有动画" class="headerlink" title="去除所有动画:"></a>去除所有动画:</h3><p>在主题配置文件中设定<code>use motion: false</code>即可解决上诉问题</p>
<ul>
<li>折腾了这么久,原来so easy…</li>
<li>但是这种方式又会清除所有动画效果..</li>
</ul>
<hr>
<blockquote class="blockquote-center"><h2>I love three things in this world, the sun ,the moon and you. The sun for the day, the moon for the night, and you forever. </h2> </blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现在next主题下书写文章,如果加上了&lt;code&gt;### 文章标题&lt;/code&gt;,next会自动生成content目录,但是每次点开一篇文章会出现一件烦人的事&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;看这里&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;就是当我们往下滑动鼠标时(pc端),侧边栏sidebar会自动显示出来&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;怎么解决呢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看官方文档sidebar配置&lt;/p&gt;
&lt;p&gt;&lt;del&gt;解决方案是:&lt;/del&gt;&lt;br&gt;&lt;del&gt;- 先在&lt;code&gt;主题配置文件&lt;/code&gt;中找到sidebar配置,将post改为hide.很多同学改了这部分发现没效果,我们进行如下操作&lt;/del&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;del&gt;1. 找到&lt;code&gt;themes\next\source\js\src\motions.js&lt;/code&gt;文件&lt;/del&gt;&lt;br&gt;&lt;del&gt;2. 在sublime中打开文件后ctrl+f输入&lt;code&gt;CONFIG.sidebar&lt;/code&gt;&lt;/del&gt;&lt;br&gt;&lt;del&gt;3. 找到&lt;code&gt;CONFIG.sidebar.display === &amp;#39;always&amp;#39;&lt;/code&gt; 将always改为hide&lt;/del&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;del&gt;做完上述步骤后,在git bash或其他终端中输入&lt;code&gt;hexo s&lt;/code&gt;测试下吧,应该no problem了&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最后解决&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://doyouz.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://doyouz.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题模块配置</title>
    <link href="http://doyouz.com/2016/12/30/hexo%E4%B8%BB%E9%A2%98%E6%A8%A1%E5%9D%97%E9%85%8D%E7%BD%AE/"/>
    <id>http://doyouz.com/2016/12/30/hexo主题模块配置/</id>
    <published>2016-12-29T17:24:27.000Z</published>
    <updated>2016-12-30T11:57:17.951Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正在测试标签页和分类页"><a href="#正在测试标签页和分类页" class="headerlink" title="正在测试标签页和分类页"></a>正在测试标签页和分类页</h3><p>不知道是不是在front-matter区域添加categories和tags就可以了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">title:hexo主题模块配置</div><div class="line"></div><div class="line">categories:</div><div class="line">- hexo targs test</div><div class="line">tags:</div><div class="line">- test</div><div class="line">- Games</div></pre></td></tr></table></figure>
<p>附上front-matter配置图<br><img src="http://doyouz.com/images/front-matter.png" alt="front-matter"></p>
<p>试试看,万一成功了呢 hiahiahia</p>
<blockquote class="blockquote-center"><h2>I’ll think of you every step of the way.</h2> </blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;正在测试标签页和分类页&quot;&gt;&lt;a href=&quot;#正在测试标签页和分类页&quot; class=&quot;headerlink&quot; title=&quot;正在测试标签页和分类页&quot;&gt;&lt;/a&gt;正在测试标签页和分类页&lt;/h3&gt;&lt;p&gt;不知道是不是在front-matter区域添加categories和
    
    </summary>
    
      <category term="hexo" scheme="http://doyouz.com/categories/hexo/"/>
    
    
      <category term="test" scheme="http://doyouz.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>hexo的一些书签</title>
    <link href="http://doyouz.com/2016/12/29/hexo%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B9%A6%E7%AD%BE/"/>
    <id>http://doyouz.com/2016/12/29/hexo的一些书签/</id>
    <published>2016-12-28T16:05:05.000Z</published>
    <updated>2016-12-30T09:40:12.883Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一些觉得不错的文章"><a href="#一些觉得不错的文章" class="headerlink" title="一些觉得不错的文章"></a>一些觉得不错的文章</h3><ol>
<li><a href="http://www.jianshu.com/p/17fdcf17bbb4" target="_blank" rel="external">Markdown:让书写更美好</a></li>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">hexo官方中文文档</a></li>
<li><a href="http://www.jianshu.com/p/e99ed60390a8" target="_blank" rel="external">hexo搭建github博客</a></li>
<li><a href="http://www.jianshu.com/p/db7e64d86067" target="_blank" rel="external">hexo博客配置-主题-写作</a></li>
<li><a href="http://www.jianshu.com/p/aa30cc25c91b" target="_blank" rel="external">Sublime插件:Markdown篇</a></li>
<li><a href="http://www.jianshu.com/p/7bd4e6ed99be" target="_blank" rel="external">简化markdown写作中的贴图流程</a></li>
</ol>
<hr>
<h3 id="sublime-Text3-OmniMarkupPreviewer-404"><a href="#sublime-Text3-OmniMarkupPreviewer-404" class="headerlink" title="sublime-Text3 OmniMarkupPreviewer 404"></a>sublime-Text3 OmniMarkupPreviewer 404</h3><blockquote>
<p>关于sublime插件bug</p>
</blockquote>
<p>sublime的<code>OmniMarkupPreviewer</code>插件出现这个问题解决办法,在以下路径中添加图中代码<br><img src="http://doyouz.com/images/12-29-sublime.png" alt="solution"></p>
<p>在下面复制代码,上面这是图片,后来才意识到用代码方便大家复制<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"renderer_options-MarkdownRenderer"</span>: &#123;</div><div class="line">        <span class="string">"extensions"</span>: [<span class="string">"tables"</span>, <span class="string">"fenced_code"</span>, <span class="string">"codehilite"</span>]</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul>
<li>markdown引用图片路径时</li>
<li>在blog的source文件夹中新建一个images文件夹</li>
<li>然后把图片放在images文件夹里<code>![text](/images/img.png)</code> </li>
<li>这样方便管理图片</li>
<li>发现bug: <code>{上诉地址只在hexo主页面能显示} 文章页面无法显示图片</code></li>
</ul>
<hr>
<ul>
<li>由于hexo的主页路由和文章页面路由配置不同,使用相对地址后图片在主页渲染出来,在文章页无法显示,故:</li>
<li>图片得用网上绝对地址,先上传图片到github</li>
<li>使用绝对地址定义<code>![text](http://doyouz.com/images/img.png)</code></li>
</ul>
<blockquote class="blockquote-center"><h2>You got a dream, you gotta protect it. People can’t do something themselves,they wanna tell you you can’t do it.If you want something, go get it. Period.</h2> </blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一些觉得不错的文章&quot;&gt;&lt;a href=&quot;#一些觉得不错的文章&quot; class=&quot;headerlink&quot; title=&quot;一些觉得不错的文章&quot;&gt;&lt;/a&gt;一些觉得不错的文章&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/17
    
    </summary>
    
      <category term="hexo" scheme="http://doyouz.com/categories/hexo/"/>
    
    
      <category term="share" scheme="http://doyouz.com/tags/share/"/>
    
  </entry>
  
  <entry>
    <title>测试评论功能</title>
    <link href="http://doyouz.com/2016/12/28/%E6%B5%8B%E8%AF%95%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
    <id>http://doyouz.com/2016/12/28/测试评论功能/</id>
    <published>2016-12-28T15:27:39.000Z</published>
    <updated>2017-01-04T10:07:16.303Z</updated>
    
    <content type="html"><![CDATA[<h3 id="测试一下评论插件是否配置好"><a href="#测试一下评论插件是否配置好" class="headerlink" title="测试一下评论插件是否配置好"></a>测试一下评论插件是否配置好</h3><ul>
<li>按着说明文档配置了一下,见证奇迹的时候到了</li>
<li>我猜可以 </li>
<li>不可以把你吃了~~</li>
</ul>
<hr>
<ol>
<li>so sad 表示并没有配置好 好吧,重来. step one next</li>
<li>发现问题 : config文件选错了,应该是用根目录的,soga<ul>
<li>附上配置链接<a href="http://dev.duoshuo.com/threads/541d3b2b40b5abcd2e4df0e9" target="_blank" rel="external">Hexo使用多说教程</a></li>
</ul>
</li>
</ol>
<hr>
<ul>
<li>出现评论栏了oh yeah</li>
</ul>
<h3 id="最近有点boring…"><a href="#最近有点boring…" class="headerlink" title="最近有点boring…"></a>最近有点boring…</h3><blockquote>
<p>话说怎么更改评论框的样式</p>
</blockquote>
<ul>
<li>待我回头找找文档资料</li>
</ul>
<hr>
<h3 id="多说评论框样式的修改"><a href="#多说评论框样式的修改" class="headerlink" title="多说评论框样式的修改"></a>多说评论框样式的修改</h3><p>next主题的多说样式文件路径在</p>
<hr>
<p><code>your-blog\themes\next\source\css\_common\components\third-party\duoshuo.styl</code></p>
<hr>
<ul>
<li><p>隐藏底部多说版权</p>
</li>
<li><p>添加代码<code>#ds-thread #ds-reset .ds-powered-by{display:none;}</code></p>
</li>
<li><p>将评论框底部的分享到微博QQ空间什么的隐藏起来</p>
</li>
<li><p>代码<code>#ds-thread #ds-reset .ds-sync {display:none;}</code></p>
</li>
</ul>
<blockquote class="blockquote-center"><h2>You may be out of my sight, but never out of my mind.</h2> </blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;测试一下评论插件是否配置好&quot;&gt;&lt;a href=&quot;#测试一下评论插件是否配置好&quot; class=&quot;headerlink&quot; title=&quot;测试一下评论插件是否配置好&quot;&gt;&lt;/a&gt;测试一下评论插件是否配置好&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;按着说明文档配置了一下,见证奇迹的时候到
    
    </summary>
    
    
      <category term="test" scheme="http://doyouz.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://doyouz.com/2016/12/28/hello-world/"/>
    <id>http://doyouz.com/2016/12/28/hello-world/</id>
    <published>2016-12-28T10:31:01.554Z</published>
    <updated>2016-12-28T10:31:01.554Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
