<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[cnpm和yarn]]></title>
      <url>%2F2017%2F01%2F04%2Fcnpm%E5%92%8Cyarn%2F</url>
      <content type="text"><![CDATA[1.NPM想想还是从介绍npm开始吧.NPM是随同NodeJS一起安装的包管理工具(Node Packaged Modules),通过npm可以下载和安装nodejs的模块包.在node官网下载安装node后,自带了这个工具. 附上Nodejs官网 npm的简单指令 npm安装模块 1$ npm install &lt;Module Name&gt; npm全局安装和本地安装 12345678910111213$ npm install express 本地安装$ npm install express -g 全局安装``` &gt; 卸载模块```bash$ npm uninstall &lt;Module Name&gt;``` &gt; 查看模块```bash$ npm ls#在/node_modules/ 目录下查看包是否还存在 更新模块 1$ npm update &lt;Module Name&gt; 搜索模块 1$ npm search &lt;Module Name&gt; 创建模块 即模块初始化,创建模块时,package.json文件不可少,可以使用生成这个文件. 1$ npm init 安装并作为package.json的一个依赖(dependency) 1$ npm install &lt;pkg&gt; --save 查看帮助 1$ npm help &lt;command&gt; package.json属性12345678910- name --包名- version --包的版本号- description --包的描述- homepage --包的官网url- author --包的作者姓名- contributors --包的其他贡献者姓名- dependencies --依赖包列表- repository --包代码存放的地方的类型- main --main字段是一个模块ID,它是一个指向你程序的主要项目- keywords --关键字 CNPMCNPM其实就是淘宝NPM镜像,这是一个完整npmjs.org镜像,可以用此代替官方版本(只读),同步频率目前为10分钟一次以保证尽量与官方服务同步. 因为npm安装package是从国外服务器下载,速度会受较大影响.如果npm的服务器在国内就会大大的提高下载速度,于是淘宝团队就将整个服务端包都复制了一模一样的,10分钟更新一次,方便国内用户下载 cnpm官网CNPM CNPM安装 1$ npm install -g cnpm --registry=https://registry.npm.taobao.org 安装了cnpm后,再安装package就可以用cnpm 1$ cnpm install &lt;Module Name&gt; 同步模块 可以通过sync命令马上同步一个模块,只有cnpm才有这个命令1$ cnpm sync connect cnpm不能使用cnpm publish 使用nrm快速切换npm源nrm是一个npm源管理器,能让我们在npm源间快速切换.nrm的githubnrm install 1$ npm install -g nrm nrm使用 列出可用源 1$ nrm ls 12345 npm ---- https://registry.npmjs.org/* cnpm --- http://r.cnpmjs.org/ taobao - http://registry.npm.taobao.org/ nj ----- https://registry.nodejitsu.com/ rednpm - http://registry.mirror.cqupt.edu.cn 切换现有源 1nrm use taobao 添加源 1$ nrm add &lt;registry&gt; &lt;url&gt; [home] 删除源 1nrm del &lt;registry&gt; 测试所有源速度 1nrm test 1234567 npm ---- 891ms cnpm --- 1213ms* taobao - 460ms eu ----- 3859ms au ----- 1073ms sl ----- 4150ms nj ----- 8008ms yarn终于写到yarn了,yarn是facebook在16年10月11日公开的js包管理工具,用来替代目前广泛使用的npm.yarn的github项目地址yarn.可以看到目前(17年01.04)已有2万多Star了. yarn和npm都作为nodejs的包管理工具.但相比npm.yarn具有的新亮点如下 网络优化 安全–下载前会检查签名和包的完整性 离线模式–如果之前安装过一个包,再次安装就不用从网络下载了 依赖关系确定性 扁平模式 总结来说,yarn具有快速,安全,可靠的特点 yarn的安装这里给出官方文档 yarn安装,没有中文版,比较新.看不懂的话可以使用有道翻译下~~ yarn的使用 项目初始化.切到项目下,会在根目录生成package.json 1yarn init 添加依赖.添加包,会自动安装最新版本 1yarn add &lt;package&gt; 更新依赖 123yarn upgrade [package] — 更新某个包yarn upgrade [package]@[version] — 指定更新到某个版本yarn upgrade [package]@[tag] — 指定更新版本到某个标签 移除依赖 1yarn remove &lt;package&gt; 注意yarn里有个很重要的文件yarn.lock,在项目根目录下,不要去动它,在其他电脑初始化时,需要把package.json和yarn.lock都复制过去 写了好久,今天就大概总结这么多吧.网上搜了很多资料,如果有不准确的地方欢迎指正 :） Accept what was and what is, and you’ll have more positive energy to pursue what will be.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[跨域]]></title>
      <url>%2F2017%2F01%2F03%2F%E8%B7%A8%E5%9F%9F%2F</url>
      <content type="text"><![CDATA[跨域和跨域的几种方式一直想总结下有关跨域的知识点,趁着现在有点时间,敲敲写写也是不错的. 跨域 跨域是指不同域名之间的相互访问. 同源策略 同源策略是浏览器的一种安全策略，所谓同源是指域名，协议，端口完全相同. 因为浏览器同源策略的限制,本域的js不能操作其他域下的js,对象或数据.这跟浏览器有关,浏览器拦住了发送的消息,而与服务端无关. 跨域的方式理解了跨域和同源策略后,我们来看看有哪些方式可以解决跨域的,这里搜集了网上一些资料,再自己总结了一下.如果有不对的地方欢迎指出 :) 1. jsonpjsonp(json with padding)其本质是利用了&lt;script src=&quot;&quot;&gt;&lt;/script&gt;标签不受同源策略限制.由服务端返回一个预先定义好的Javascript函数的调用，并且将服务器数据以该函数参数的形式传递过来，此方法需要前后端配合完成。这也是前端解决跨域问题最常见的方法. 注意 只能使用get方法(因为script标签只能是get) 需要服务端的跨域支持(预先设定callback回调函数) 比如,在服务端(node.js)做一层包装res.send(${req.query.callback}),添加一个函数,然后前端Ajax请求返回这个函数的调用.jsonp的优点是简单,兼容性好.缺点是只支持GET请求. jsonp的产生 Ajax直接请求普通文件存在跨域无权访问的问题 我们在调用js文件的时候不受跨域的影响,如引入jquery框架时. 凡是拥有src这个属性的标签都可以跨域.如&lt;script&gt;,&lt;img&gt;,&lt;iframe&gt; 如果想通过纯前端跨域访问服务端数据,只能把远程服务器中的数据装进js格式的文件里 而json又是一个轻量级的数据格式,且被原生js支持 所以为了方便客户端请求数据,逐渐形成了一种非正式的传输协议,即jsonp,该协议有个要点是允许用户传递一个callback参数给服务端 2. 服务端代理(Proxy)网站A获取网站B上的资源内容,跨域方式分为B网站可控和B网站不可控,利用代理(proxy)这种方法实现跨域时,B网站不可控. proxy原理 网站A将访问网站B的请求通过参数的形式发送给代理服务器(proxy),代理服务器收到请求后转而去访问网站B,然后将获取的信息再返回给网站A,形成一个数据请求回路. 12A --&gt;request--&gt; Proxy --&gt;request--&gt; BA --&lt;response&lt;-- Proxy --response&lt;-- B 其他一些跨域方式 同主域名下iframe控制document.domain跨域 location.hash+iframe window.name+iframe 将数据通过js进行直接加载 html5中的postMessage 利用CORS进行跨域 web sockets 暂时先总结这么多,代码后期再补上吧~睡觉睡觉,晚安. Whatever is worth doing is worth doing well.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[时间的朋友]]></title>
      <url>%2F2016%2F12%2F31%2F%E6%97%B6%E9%97%B4%E7%9A%84%E6%9C%8B%E5%8F%8B%2F</url>
      <content type="text"><![CDATA[16年最后的小尾巴,时间走得真快. 如果是从前,我应该拿起笔写一封信,送给未来的自己.然后在下一年到来的时候再拆开信封.看一看写了些什么,实现了多少愿望,又有多少被遗忘在角落. 但是呢,现在好像更喜欢听着歌码着字的感觉(一定是代码敲多了[捂脸]). 想要做的事好多好多. 突然想起大一时看过的一个视频,乔布斯在斯坦福的演讲,其中有几点印象特别深刻. You’ve got to find what you love. 你必须得找到你喜欢什么,做自己喜欢的事 那么现在,我想我是走在这条路上的,毫不犹豫的舍弃机械,选择自己喜欢的IT方向,也许现在我就是一个小小的程序猿,但是我心里知道,这就是我要的. 我喜欢这种需要不断学习的行业,喜欢码字敲代码,喜欢带有些艺术感的前端,也喜欢需要不断逻辑分析的服务端,喜欢各种编程语言,同样喜欢各种外语,想学的东西太多太多,想要做的事也太多太多. 所以,才需要我们更加珍惜生命中的这些时光吧,趁青春年少,去做吧,立刻,马上,from now on. Ps.我喜欢的 喜欢简约美.如果要设计一个页面,那么一定是简约的风格.就像现在这个blog的主题. 喜欢音乐.我想有一天我会在某个空闲的午后写一首歌,作曲然后填词,再自弹自唱.如果满意的话,再录下来发给朋友. 喜欢旅游.想去远方,有多远走多远.最好是,和朋友,和家人,和未来的她,分别去不同的地方走走看看,印下一段又一段走在路上的时光. 喜欢…好吧,扯远了…. 回到jobs的演讲上来,以下是他的原话: The first story is about connecting the dots. 第一个故事是关于如何把生命中的点点滴滴串连起来。 jobs的演讲提到三个点,最开始说的主要是我们生命中所经历的故事也许都有它存在的意义.只是在那个当时,也就是此时此刻,我们无法觉察到,我们常常为现在所处的环境所困扰,常常后知后觉.但必须承认的是,这些片段会在我们未来的某一天串连起来. 不论此刻我们的心情是悲伤,难过,或是仍在感叹境遇的怎样糟糕,抱怨生活的不公.但总会有那样一天,豁然开朗.那些让我们留下眼泪的事,有一天也会笑着说出来.这些过程,只是让我们的生命更加与众不同吧. PS.现在心情好得不要不要的,哇哈哈. My second story is about love and loss. 我的第二个故事是关于爱和失去. jobs二十岁的时候在父母的车库里创办了Apple.但是三十岁那年他被自己的公司炒了.Sometimes life hits you in the head with a brick,don’t lose faith.生活有时候会拿起一块砖头拍向你的脑袋,但别失去信心,他这样说. 他说我们需要找到自己所爱的东西,对于工作如此,对于爱人也是如此.And the only way to do great work is to love what you do. If you haven’t found it yet,keep looking. Don’t settle. 如果你现在还没有找到,那么继续找、不要停下来、全心全意的去找, 当你找到的时候你就会知道. 就像任何真诚的关系,随着岁月的流逝只会越来越亲密.like any great relationship, it just gets better and better as the years roll on. 摘录了大段大段原话,说的真的很棒,感触很多,有木有有木有. My third story is about death. 我的第三个故事是关于死亡的. “If you live each day as if it was your last, someday you’ll most certainly be right.” 如果你把每一天都当作生命中最后一天去生活的话,那么有一天你会发现你是正确的. jobs说在他17岁那年读到这段话,说他每天早上醒来都会对着镜子问自己,”如果今天是我生命中最后一天,你会不会完成你今天想做的事情呢”. 我们的时间有限,生命有限.Don’t let the noise of other’s opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. Stay Hungry. Stay Foolish. 好吧,一提到这段演讲就停不下来,总想把原话都贴过来,其中很多关于人生的思考,至少,让我很有感触. 写在16年的岁末. 三毛曾说,一个人至少拥有一个梦想，有一个理由去坚强。心若没有栖息的地方，到哪里都是在流浪. 没有写梦想,但梦想一直都在. 好啦,还有几分钟就到2017年.让我们17,在17年加油努力,收获幸福. 希望家人身体健康 希望朋友们工作顺利,事业有成 希望身边每一个可爱的人都快乐幸福 You may be out of my sight, but never out of my mind.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[next主题多说评论框样式修改]]></title>
      <url>%2F2016%2F12%2F31%2Fnext%E4%B8%BB%E9%A2%98%E5%A4%9A%E8%AF%B4%E8%AF%84%E8%AE%BA%E6%A1%86%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9%2F</url>
      <content type="text"><![CDATA[修改多说评论框样式在next主题下启用了多说评论框功能后,小伙伴们可能会对评论框样式不太满意,如果你懂一点CSS就好办了,找到css文件自己改改就行,如果不懂也没关系,这里给大家分享一下网上很多的一种样式,现在我用的就是这个样式. 首先next主题多说样式文件在这个路径:your-blog-path/themes/next/source/css/_common/components/third-party/duoshuo.styl在这个文件的底部添加如下代码,这里我自己改动了两个样式: 去掉多说版权显示#ds-thread #ds-reset .ds-powered-by{display:none;} 去掉分享到微博#ds-thread #ds-reset .ds-sync {display:none;} 多说的后台自定义样式关于评论的头像样式,鼠标放上去旋转360度这种效果,需要在多说的后台自定义,如图 在其中添加如下代码 123456789101112131415161718192021222324252627282930#ds-reset .ds-avatar img&#123; width:54px;height:54px; border-radius: 27px;-webkit-border-radius: 27px;-moz-border-radius:27px;box-shadow: inset 0 -1px 0 #3333sf; -webkit-box-shadow: inset 0 -1px 0 #3333sf;&#125;#ds-reset .ds-avatar img&#123;width:54px;height:54px; border-radius: 27px;-webkit-border-radius: 27px;-moz-border-radius:27px;box-shadow: inset 0 -1px 0 #3333sf;-webkit-box-shadow: inset 0 -1px 0 #3333sf;-webkit-transition: 0.4s; -webkit-transition: -webkit-transform 0.4s ease-out;transition: transform 0.4s ease-out;-moz-transition: -moz-transform 0.4s ease-out;&#125;#ds-reset .ds-avatar img:hover&#123;box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);-webkit-box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);transform: rotateZ(360deg);-webkit-transform: rotateZ(360deg);-moz-transform: rotateZ(360deg);&#125; 即使你不懂css也没关系,直接复制粘贴就好.之后再hexo s本地预览一下看看效果吧.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[关于next主题sidebar默认显示目录]]></title>
      <url>%2F2016%2F12%2F30%2F%E5%85%B3%E4%BA%8Enext%E4%B8%BB%E9%A2%98sidebar%E9%BB%98%E8%AE%A4%E6%98%BE%E7%A4%BA%E7%9B%AE%E5%BD%95%2F</url>
      <content type="text"><![CDATA[发现在next主题下书写文章,如果加上了### 文章标题,next会自动生成content目录,但是每次点开一篇文章会出现一件烦人的事 看这里 就是当我们往下滑动鼠标时(pc端),侧边栏sidebar会自动显示出来 怎么解决呢 看官方文档sidebar配置 解决方案是:- 先在主题配置文件中找到sidebar配置,将post改为hide.很多同学改了这部分发现没效果,我们进行如下操作 1. 找到themes\next\source\js\src\motions.js文件2. 在sublime中打开文件后ctrl+f输入CONFIG.sidebar3. 找到CONFIG.sidebar.display === &#39;always&#39; 将always改为hide 做完上述步骤后,在git bash或其他终端中输入hexo s测试下吧,应该no problem了 最后解决 发现这样只是在文章页可以自动显示sidebar,看了下motion.js源码,首页进入后还是会在duration 200ms延迟显示sidebar 还是回到主题的配置文件,添加 display: hide 这条语句 写得不太详细,有空再补上一些文档链接 睡了 晚安 终于改好这个sibebar的显示了 ~perfect 去除所有动画:在主题配置文件中设定use motion: false即可解决上诉问题 折腾了这么久,原来so easy… 但是这种方式又会清除所有动画效果.. I love three things in this world, the sun ,the moon and you. The sun for the day, the moon for the night, and you forever.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo主题模块配置]]></title>
      <url>%2F2016%2F12%2F30%2Fhexo%E4%B8%BB%E9%A2%98%E6%A8%A1%E5%9D%97%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[正在测试标签页和分类页不知道是不是在front-matter区域添加categories和tags就可以了 1234567title:hexo主题模块配置categories:- hexo targs testtags:- test- Games 附上front-matter配置图 试试看,万一成功了呢 hiahiahia I’ll think of you every step of the way.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo的一些书签]]></title>
      <url>%2F2016%2F12%2F29%2Fhexo%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B9%A6%E7%AD%BE%2F</url>
      <content type="text"><![CDATA[一些觉得不错的文章 Markdown:让书写更美好 hexo官方中文文档 hexo搭建github博客 hexo博客配置-主题-写作 Sublime插件:Markdown篇 简化markdown写作中的贴图流程 sublime-Text3 OmniMarkupPreviewer 404 关于sublime插件bug sublime的OmniMarkupPreviewer插件出现这个问题解决办法,在以下路径中添加图中代码 在下面复制代码,上面这是图片,后来才意识到用代码方便大家复制12345&#123; "renderer_options-MarkdownRenderer": &#123; "extensions": ["tables", "fenced_code", "codehilite"] &#125;&#125; 注意 markdown引用图片路径时 在blog的source文件夹中新建一个images文件夹 然后把图片放在images文件夹里![text](/images/img.png) 这样方便管理图片 发现bug: {上诉地址只在hexo主页面能显示} 文章页面无法显示图片 由于hexo的主页路由和文章页面路由配置不同,使用相对地址后图片在主页渲染出来,在文章页无法显示,故: 图片得用网上绝对地址,先上传图片到github 使用绝对地址定义![text](http://doyouz.com/images/img.png) You got a dream, you gotta protect it. People can’t do something themselves,they wanna tell you you can’t do it.If you want something, go get it. Period.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[测试评论功能]]></title>
      <url>%2F2016%2F12%2F28%2F%E6%B5%8B%E8%AF%95%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%2F</url>
      <content type="text"><![CDATA[测试一下评论插件是否配置好 按着说明文档配置了一下,见证奇迹的时候到了 我猜可以 不可以把你吃了~~ so sad 表示并没有配置好 好吧,重来. step one next 发现问题 : config文件选错了,应该是用根目录的,soga 附上配置链接Hexo使用多说教程 出现评论栏了oh yeah 最近有点boring… 话说怎么更改评论框的样式 待我回头找找文档资料 多说评论框样式的修改next主题的多说样式文件路径在 your-blog\themes\next\source\css\_common\components\third-party\duoshuo.styl 隐藏底部多说版权 添加代码#ds-thread #ds-reset .ds-powered-by{display:none;} 将评论框底部的分享到微博QQ空间什么的隐藏起来 代码#ds-thread #ds-reset .ds-sync {display:none;} You may be out of my sight, but never out of my mind.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F12%2F28%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
